@page "/productos/agregar"
@using Pharmatic.DTOs;
@layout MainLayout
@inject NavigationManager _navigationManager

<MudPaper Class="ma-5">
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius: 15px;">

        <MudSpacer />

        <MudButton Class="rounded-pill" ButtonType="ButtonType.Submit" Size="Size.Large" Variant="Variant.Filled"
                   Color="Color.Error" Style="margin-right:10px;">
            Cancelar
        </MudButton>

        <MudButton Class="rounded-pill" ButtonType="ButtonType.Submit" Size="Size.Large" Variant="Variant.Filled"
                   Color="Color.Primary" OnClick="GuardarClicked">
            Guardar
        </MudButton>
    </MudAppBar>
    <MudGrid Class="pa-5">
        <MudItem xs="6">
            <EditForm Model="_producto">
                <MudTextField T="string" @bind-Value="_producto.Name" Label="Nombre" Class="my-5"/>
                <MudTextField T="string" @bind-Value="_producto.Description" Label="Filled" Text="@sampleText" Lines="5" Class="my-5"/>
                <MudSelect T="string" Label="Categoría" AnchorOrigin="Origin.BottomCenter" Class="my-5">
                    <MudSelectItem Value='new string("Cat1")' />
                    <MudSelectItem Value='new string("Cat2")' />
                    <MudSelectItem Value='new string("Cat3")' />
                    <MudSelectItem Value='new string("Cat4")' />
                </MudSelect>
                <MudSelect T="string" Label="SubCategoría" AnchorOrigin="Origin.BottomCenter" Class="my-5">
                    <MudSelectItem Value='new string("Cat1")' />
                    <MudSelectItem Value='new string("Cat2")' />
                    <MudSelectItem Value='new string("Cat3")' />
                    <MudSelectItem Value='new string("Cat4")' />
                </MudSelect>
                <MudSelect T="string" Label="Tags" AnchorOrigin="Origin.BottomCenter" MultiSelection="true" Class="my-5">
                    <MudSelectItem Value='new string("Cat1")' />
                    <MudSelectItem Value='new string("Cat2")' />
                    <MudSelectItem Value='new string("Cat3")' />
                    <MudSelectItem Value='new string("Cat4")' />
                </MudSelect>
            </EditForm>
            
        </MudItem>

        <MudItem xs="6">
            <MudCard Class="pa-5">
                <MudCardMedia Image="@photoUrl" Height="450" Style="background-size: contain;"/>

                <MudFileUpload T="IBrowserFile" OnFilesChanged="OnInputFileChanged">
                    <ButtonTemplate>
                            <MudButton HtmlTag="label"
                                       Variant="Variant.Filled"
                                       Color="Color.Info"
                                       for="@context">
                                Subir Foto
                            </MudButton>
                    </ButtonTemplate>
                        <SelectedTemplate>
                            <MudButton Class="rounded-pill" ButtonType="ButtonType.Submit" Size="Size.Large"
                                       Variant="Variant.Filled" Color="Color.Error" OnClick="ClearFile">
                                Limpiar
                            </MudButton>
                            @if (photo != null)
                            {
                                <MudText>@context.Name</MudText>
                            }
                            else
                            {
                                <MudText>Sin foto</MudText>
                            }
                        </SelectedTemplate>
                </MudFileUpload>
                    
            </MudCard>
        </MudItem>
        
    </MudGrid>

</MudPaper>

@code {
    [Parameter]
    public ProductMinimalDTO _producto { get; set; } = new ProductMinimalDTO();
    string sampleText = "La clasica de ponerle lorem ipsum a todo pero como no me lo se mejor solo escribo texto aleatorio y de relleno que no aporta nada importante... mmm ahora que lo recuerdo eso es exactamente lo que recibimos en simulacion asi que no hay tanta diferencia entre este texto y esa clase";
    private IBrowserFile? photo;
    private string photoUrl = string.Empty;

    private async Task OnInputFileChanged(InputFileChangeEventArgs e)
    {
        photo = e.File;
        photoUrl = await ConvertToUrl(photo);
    }

    private async Task<string> ConvertToUrl(IBrowserFile file)
    {
        using var stream = file.OpenReadStream();
        using var memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);

        var base64String = Convert.ToBase64String(memoryStream.ToArray());
        var url = $"data:{file.ContentType};base64,{base64String}";

        return url;
    }

    private void GuardarClicked()
    {
        _navigationManager.NavigateTo("/productos");
    }

    private void ClearFile()
    {
        photo = null;
        photoUrl = string.Empty;
    }
}
