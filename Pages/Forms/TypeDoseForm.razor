@page "/metadata/dosis"
@using Pharmatic.DTOs;
@using Pharmatic.Services;
@inject SharedData _data
@layout MainLayout
@inject TypeDoseService _doseService
@inject NavigationManager _navigationManager

<MudPaper>
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius: 15px; position: sticky; top: 0;">
        <MudTextField @bind-Value="@search_text" Placeholder="Buscar" Variant="Variant.Outlined" Adornment="Adornment.Start"
                      AdornmentIcon="@CustomIcons.Search" Margin="Margin.Dense" />

        <MudSpacer />

        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                   Color="Color.Primary" OnClick="OpenAddDialog">
            Agregar
        </MudButton>
    </MudAppBar>
    <MudGrid Class="pa-3" Spacing="1">
        @foreach (var dose in dose_list)
        {
            <MudItem xs="3">
                <MudCard Style="background-color: #F5F5F5">
                    <MudCardContent Style="display: flex; justify-content:space-evenly; align-items: center;">
                        <MudText Typo="Typo.body1">@dose.Name</MudText>

                        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Small"
                                   Color="Color.Error" OnClick="() => OpenDeleteDialog(dose.Name)">
                            Eliminar
                        </MudButton>
                        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Small"
                                   Color="Color.Primary" OnClick="() => OpenEditDialog(dose.Name)">
                            Editar
                        </MudButton>
                   </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>

</MudPaper>

<MudDialog @bind-IsVisible="add_visible">
    <TitleContent>
        <MudText Typo="Typo.h4">
            Creación de tipo de dosis
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="dose_txt" Label="Tipo de dosis" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="AddSubmit" Class="px-10">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddSubmit" Class="px-10">Crear</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="edit_visible">
    <TitleContent>
        <MudText Typo="Typo.h4">
            Edición de tipo de dosis
        </MudText>
        <MudText Typo="Typo.body1">
            Nombre actual de tipo de dosis: @current_dose
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="dose_txt" Label="Nuevo nombre" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="EditSubmit" Class="px-10">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="EditSubmit" Class="px-10">Crear</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="delete_visible">
    <TitleContent>
        <MudText Typo="Typo.h4">
            Desea eliminar @current_dose?
        </MudText>
        <MudText Typo="Typo.body1">
            Estas completamente seguro, tambien eliminaras los registros que dependen de esta información.
        </MudText>
    </TitleContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" OnClick="DeleteSubmit" Class="px-10">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="DeleteSubmit" Class="px-10">Eliminar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private string search_text = string.Empty;
    private List<TypeDoseDTO> dose_list = new List<TypeDoseDTO>();

    private bool add_visible;
    private void OpenAddDialog() => add_visible = true;
    void AddSubmit() => add_visible = false;

    private bool edit_visible;
    private void OpenEditDialog(string n)
    {
        edit_visible = true;
        current_dose = n;
    }
    void EditSubmit() => edit_visible = false;

    private bool delete_visible;
    private void OpenDeleteDialog(string n)
    {
        delete_visible = true;
        current_dose = n;
    }
    void DeleteSubmit() => delete_visible = false;

    private string dose_txt;
    private string current_dose;

    protected override async Task OnInitializedAsync()
    {
        _data.Items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/dashboard", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Metadata", href: "/metadata"),
            new BreadcrumbItem("Tipo de dosis", href: null, disabled: true)
        };
        await GetDoses();
    }

    private void Devolver()
    {
        _navigationManager.NavigateTo("/metadata");
    }

    private async Task GetDoses()
    {
        var result = await _doseService.TypeDoseList();
        dose_list = (List<TypeDoseDTO>)result!;
    }
}
