@page "/productos"
@using Pharmatic.DTOs;
@using Pharmatic.Services;
@layout MainLayout
@inject ProductService _productService
@inject NavigationManager _navigationManager
@inject SharedData _data

<MudPaper>
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius: 15px; position: sticky; top: 0;">
        <MudTextField @bind-Value="@search_text" Placeholder="Buscar" Variant="Variant.Outlined" Adornment="Adornment.Start"
                      AdornmentIcon="@CustomIcons.Search" Margin="Margin.Dense" />

        <MudSpacer />

        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                   Color="Color.Primary" OnClick="AgregarClicked">
            Agregar
        </MudButton>
    </MudAppBar>
    <MudGrid Class="pa-3">
        @foreach (var prod in product_list)
        {
            <MudItem xs="4">

                <MudCard Style="background-color: #F5F5F5" Class="hover-card" Outlined="true">

                    <a href="/productos/detalle/@prod.ProductNo" style="display: block; text-decoration: none;">

                    <MudCardHeader>
                        
                        <CardHeaderAvatar>
                            <MudImage Src="@prod.ImageUrl" Width="80" Height="80" Elevation="25" Class="rounded-lg ma-4" />
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">@prod.Name</MudText>
                            <MudText Typo="Typo.body1">@prod.Category?.Name - # de lotes @prod.LotCount</MudText>
                            @if (prod.Tags?.Count > 0)
                            {
                                @foreach (var tag in prod.Tags)
                                {
                                    <MudChip Color="Color.Primary" Size="Size.Small">@tag.Name</MudChip>
                                }
                            }
                            else
                            {
                                    <MudChip Color="Color.Error" Size="Size.Small">Sin etiquetas</MudChip>
                                
                            }
                        </CardHeaderContent>

                    </MudCardHeader>
                        
                    </a>

                </MudCard>

            </MudItem>
        }
    </MudGrid>
    
</MudPaper>

@code {
    private string search_text = string.Empty;
    private List<ProductDTO> product_list = new List<ProductDTO>();

    protected override async Task OnInitializedAsync()
    {
        _data.Items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/dashboard", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Productos", href: null, disabled: true)
        };
        await GetProducts();
    }

    private void AgregarClicked()
    {
        _navigationManager.NavigateTo("/productos/agregar");
    }

    private async Task GetProducts()
    {
        var result = await _productService.ProductList();
        product_list = result!;
    }

}
