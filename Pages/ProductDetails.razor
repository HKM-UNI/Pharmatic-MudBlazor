@page "/productos/detalle/{id}"
@using Pharmatic.DTOs;
@using Pharmatic.Services;
@layout MainLayout
@inject ProductService _productService
@inject LotService _lotService
@inject NavigationManager _navigationManager
@inject SharedData _data

<MudPaper Class="ma-3">
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius: 15px;">

        <MudSpacer />

        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                   Color="Color.Error">
            Eliminar Producto
        </MudButton>

        <MudDivider DividerType="DividerType.Middle"></MudDivider>

        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                   Color="Color.Primary" OnClick="EditProduct">
            Editar Producto
        </MudButton>
    </MudAppBar>
    <MudGrid Class="pa-5">
        <MudItem xs="3">
            <MudImage Src="@product.imageUrl" Elevation="3" 
                Fluid="true"/>
        </MudItem>

        <MudItem xs="9">

            <MudText Typo="Typo.h3">@product.name</MudText>
            <MudText Typo="Typo.h4">@product.category?.name - @product.subcategory?.name</MudText>
                
            @if (product.tags?.Count > 0)
            {
                @foreach (var tag in product.tags)
                {
                    <MudChip Color="Color.Primary" Size="Size.Medium">@tag.name</MudChip>
                }
            }
            else
            {
                <MudChip Color="Color.Error" Size="Size.Medium">Sin etiquetas</MudChip>
            }
            <MudText Typo="Typo.body1">@product.description</MudText>
        </MudItem>

        <MudItem xs="12">
            <MudText Typo="Typo.h6" Inline="true">Lotes: @product.lotCount</MudText>
            <MudButton Class="rounded-pill mx-3" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                       Color="Color.Primary">
                Agregar Lote
            </MudButton>
        </MudItem>

        @foreach(var lot in lot_list)
        {
            <MudItem xs="3">
                <MudCard Style="background-color: #F5F5F5">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6" Inline="true">Proveedor:</MudText>
                            <MudText Typo="Typo.h6" Color="Color.Info" Inline="true">@lot.provider?.name</MudText>
                            <MudText Typo="Typo.body1"><b>Composicion:</b> @lot.composition?.Composition()</MudText>
                            <MudText Typo="Typo.body1"><b>Stock:</b> @lot.stock</MudText>
                            <MudText Typo="Typo.body1"><b>Venta:</b> @lot.sellingPrice C$</MudText>
                            <MudText Typo="Typo.body1"><b>Compra:</b> @lot.purchasePrice C$</MudText>
                            
                            <MudText Typo="Typo.body1"> <b>Fecha Vencimiento:</b> </MudText>
                            <MudText Typo="Typo.body1" Color="Color.Success">
                                <MudIcon Icon="@Icons.Material.Filled.DateRange" Size="Size.Small" /> @lot.expirationDate.ToString("dd/MM/yyyy")
                            </MudText>
                            @if (@lot.consign)
                            {
                                <MudChip Icon="@Icons.Material.Filled.VerifiedUser" Color="Color.Dark">En consigna</MudChip>
                            }
                        </CardHeaderContent>
                    </MudCardHeader>
                </MudCard>
            </MudItem>
        }

    </MudGrid>

</MudPaper>

@code {
    [Parameter]
    public string Id { get; set; }

    private List<LotDTO> lot_list = new List<LotDTO>();
    private ProductDTO product = new ProductDTO();

    protected override async Task OnInitializedAsync()
    {
        _data.Items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/dashboard", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Productos", href: "/productos"),
            new BreadcrumbItem("Detalle producto", href: null, disabled: true)
        };

        await GetLots();
        product = await _productService.SearchProduct(Id);
    }

    private async Task GetLots()
    {
        var result = await _lotService.LotList(Id);
        lot_list = result!;

    }

    private void EditProduct()
    {
        _navigationManager.NavigateTo("/productos/editar/" + Id);
    }
}
