@page "/ventas/historial"
@attribute [Authorize(Policy = "SalesRead")]
@using Pharmatic.DTOs;
@using Pharmatic.Services;
@layout MainLayout
@inject NavigationManager _navigationManager
@inject SharedData _data
@inject SalesService _salesService
@inject LotService _lotService
@inject ProductService _productService
@inject CustomerService _customerService

<MudPaper Class="mx-2" Style="height:100%; overflow-y:auto; overflow-x: hidden; background-color:white;">
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius: 15px; position: sticky; top: 0;">
        <MudTextField @bind-Value="@search_text" Placeholder="Buscar" Variant="Variant.Outlined" Adornment="Adornment.Start"
                      AdornmentIcon="@CustomIcons.Search" Margin="Margin.Dense" />

        <MudSpacer />
    </MudAppBar>

    @if (loading)
    {
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7 px-7" Size="Size.Large" Rounded="true"/>
    }
    
    <MudGrid Class="pa-3">
        @foreach (var sale in sales_list)
        {
            <MudItem xs="4">

                <MudCard Style="background-color: #F5F5F5;" Class="hover-card" Outlined="true">

                        <MudCardContent>
                            <div class="d-flex justify-space-between">
                                <div class="d-flex align-center gap-1 teal-text">
                                    <MudIcon Icon="@CustomIcons.Payment" Size="Size.Medium"/>
                                    <MudText Typo="Typo.h6"> C$ @sale.SalesAmount</MudText>
                                </div>

                                <div class="d-flex align-center gap-1">
                                    <MudText Typo="Typo.body1"><b>@sale.TotalProducts</b></MudText>
                                    <MudIcon Icon="@Icons.Material.Filled.Inventory" Size="Size.Medium"/>
                                </div>
                            </div>

                            <MudContainer Class="my-4 py-4 px-4 rounded-lg" Style="height: 12em; overflow: auto; background-color: white; white-space: nowrap">
                                @foreach (var productDetails in sale.Products)
                                {
                                    <MudText Class="mb-2" Style="width: fit-content" Typo="Typo.body2">@productDetails</MudText>
                                }
                            </MudContainer>

                            <div class="d-flex align-center gap-1">
                                <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Size="Size.Medium"/>
                                <MudText Typo="Typo.body1">
                                    <b>@sale.SalesDate.ToString("dd/MM/yyyy")</b> a las <b>@sale.SalesDate.ToString("hh:mm tt")</b>
                                </MudText>
                            </div>

                            <div class="d-flex align-center justify-end gap-1">
                                <MudText Typo="Typo.body1">@sale.CustomerName</MudText>
                                <MudIcon Icon="@(string.IsNullOrEmpty(sale.CustomerName) ? @Icons.Material.Filled.PersonOff : Icons.Material.Filled.Person)"
                                         Size="Size.Medium"/>
                            </div>
                        </MudCardContent>

                </MudCard>

            </MudItem>
        }
    </MudGrid>

</MudPaper>

@code {
    private List<SalesHistoryDto> sales_list = new();
    private string search_text = string.Empty;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        _data.Items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/dashboard", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Historial de ventas", href: null, disabled: true)
        };

        await GetSales();

        loading = false;
    }

    private async Task GetSales()
    {
        var result = await _salesService.SalesHistory();
        sales_list = result!;
    }
}
