@page "/clientes"
@using Pharmatic.DTOs;
@using Pharmatic.Services;
@layout MainLayout
@inject CustomerService _customerService
@inject NavigationManager _navigationManager
@inject SharedData _data
@inject ISnackbar Snackbar

<MudPaper Class="mx-2" Style="height:100%; overflow-y:auto; overflow-x: hidden; background-color:white;">
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius:24px; position: sticky; top: 0;" Class="pa-0 ma-0" Dense="true">
        <MudTextField @bind-Value="@search_text" Placeholder="Buscar" Variant="Variant.Outlined" Adornment="Adornment.Start"
                      AdornmentIcon="@CustomIcons.Search" Margin="Margin.Dense"/>

        <MudSpacer />

        <MudDivider DividerType="DividerType.Middle"></MudDivider>

        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Medium"
                   Color="Color.Primary" OnClick="AddClicked" Style="text-transform:none">
            Agregar
        </MudButton>
    </MudAppBar>
    <MudGrid Class="pa-2" Spacing="1" Style="border-radius:24px;">
        @foreach (var c in customer_list)
        {
            <MudItem md="4" sm="6" xs="12">

                <MudCard Style="background-color: #F5F5F5; height:100%; width:100%;">

                        <MudCardContent>

                            <MudText Typo="Typo.h4">@c.name @c.surname</MudText>
                            <MudText Typo="Typo.body1" Color="Color.Info"> <MudIcon Icon="@Icons.Material.Filled.Mail" Size="Size.Small"/> @c.email</MudText>
                            <MudText Typo="Typo.body1" Color="Color.Success"> <MudIcon Icon="@Icons.Material.Filled.Phone" Size="Size.Small" /> @c.phone</MudText>
                            @if (c.birthDate.HasValue)
                            {
                                <MudText Typo="Typo.body1"> <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Size="Size.Small" /> @c.birthDate.Value.ToString("dd/MM/yyyy")</MudText>
                            }

                            @if (c.gender == "M")
                            {
                                <MudText Typo="Typo.body1"> <MudIcon Icon="@Icons.Material.Filled.Male" Size="Size.Small" /> Hombre</MudText>
                            }
                            else if (c.gender == "F")
                            {
                                <MudText Typo="Typo.body1"> <MudIcon Icon="@Icons.Material.Filled.Female" Size="Size.Small" /> Mujer</MudText>
                            }
                            else
                            {
                                <MudText Typo="Typo.body1">Género no especificado</MudText>
                            }

                        </MudCardContent>

                        <MudCardActions>
                            <MudButton Class="rounded-pill mx-1" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Small"
                                   Color="Color.Error" FullWidth="true" OnClick="() => OpenDeleteDialog(c.name, c.customerNo)">
                                Eliminar
                            </MudButton>

                            <MudButton Class="rounded-pill mx-1" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Small"
                                   Color="Color.Primary" FullWidth="true" OnClick="() => EditClicked(Convert.ToString(c.customerNo))">
                                Editar
                            </MudButton>
                        </MudCardActions>

                </MudCard>

            </MudItem>
        }
    </MudGrid>

</MudPaper>

<MudDialog @bind-IsVisible="delete_visible">
    <TitleContent>
        <MudText Typo="Typo.h4">
            Desea eliminar al cliente @(current_customer)?
        </MudText>
        <MudText Typo="Typo.body1">
            Estas completamente seguro, tambien eliminaras los registros que dependen de esta información.
        </MudText>
    </TitleContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" OnClick="CancelDelete" Class="px-10">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="DeleteSubmit" Class="px-10">Eliminar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private string search_text = string.Empty;
    private List<CustomerDTO> customer_list = new List<CustomerDTO>();
    private bool delete_visible = false;
    private string current_customer = string.Empty;
    private int id_customer_delete = -1;

    private void OpenDeleteDialog(string n, int id)
    {
        delete_visible = true;
        current_customer = n;
        id_customer_delete = id;
    }

    private void CancelDelete() => delete_visible = false;

    private async Task DeleteSubmit()
    {
        var response = await _customerService.DeleteCustomer(id_customer_delete);
        delete_visible = false;

        await GetCustomers();

        if (response) Snackbar.Add("Usuario eliminado", Severity.Info);
        else Snackbar.Add("No se pudo eliminar al cliente", Severity.Warning);
    }

    protected override async Task OnInitializedAsync()
    {
        _data.Items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/dashboard", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Clientes", href: null, disabled: true)
        };
        
        await GetCustomers();

        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
    }

    private async Task GetCustomers()
    {
        var result = await _customerService.CustomerList();
        customer_list = result!;
    }

    private void AddClicked() => _navigationManager.NavigateTo("/clientes/agregar");

    private void EditClicked(string id) => _navigationManager.NavigateTo("/clientes/editar/" + id);

}
