@page "/productos"
@using Pharmatic.DTOs;
@using Pharmatic.Services;
@layout MainLayout
@inject ProductService _productService
@inject NavigationManager _navigationManager

<MudPaper Class="ma-5">
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius: 15px;">
        <MudTextField @bind-Value="@search_text" Placeholder="Buscar" Variant="Variant.Outlined" Adornment="Adornment.Start"
                      AdornmentIcon="@CustomIcons.Search" Margin="Margin.Dense" />

        <MudSpacer />

        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                   Color="Color.Error" Style="margin-right:10px;">
            Eliminar
        </MudButton>

        <MudButton Class="rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                   Color="Color.Primary" OnClick="AgregarClicked">
            Agregar
        </MudButton>
    </MudAppBar>
    <MudGrid Class="pa-5">
        @foreach (var prod in product_list)
        {
            <MudItem xs="4">
                <MudCard Style="background-color: #F5F5F5">
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudImage Src="@prod.ImgURL" Width="80" Height="80" Elevation="25" Class="rounded-lg ma-4" />
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">@prod.Name</MudText>
                            <MudText Typo="Typo.body1">@prod.Category - # de lotes @prod.LotCount</MudText>
                            <div>
                                @if (prod.Tags.Count > 0)
                                {
                                    @foreach (var tag in prod.Tags)
                                    {
                                        <MudChip Color="Color.Primary" Size="Size.Small">@tag.TagName</MudChip>
                                    }
                                }
                                else
                                {
                                    <MudChip Color="Color.Error" Size="Size.Small">Sin etiquetas</MudChip>
                                }
                            </div>
                        </CardHeaderContent>
                    </MudCardHeader>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
    
</MudPaper>

@code {
    private string search_text;
    private List<ProductDTO> product_list = new List<ProductDTO>();

    protected override async Task OnInitializedAsync()
    {
        await ObtenerProductos();
    }

    private void AgregarClicked()
    {
        _navigationManager.NavigateTo("/productos/agregar");
    }

    private async Task ObtenerProductos()
    {
        var result = await _productService.ProductList();
        product_list = (List<ProductDTO>)result!;
    }
}
