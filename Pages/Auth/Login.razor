@page "/"
@inject NavigationManager _navigationManager
@layout LoginLayout


<MudPaper Class="px-4" Elevation="0" Square="true" Style="height:85vh; display: flex; flex-direction: column; justify-content: center;">
    <EditForm Model="@loginUser" OnValidSubmit="OnValidSubmit" style="">
        <MudImage Fluid="true" Src="/img/PharmaticLogo.png" />

        <DataAnnotationsValidator></DataAnnotationsValidator>

        <div style="width:75%; margin:auto;">
            <MudText Typo="Typo.h3" GutterBottom="true" Align="Align.Left">Login</MudText>

            <MudTextField T="string"
            @bind-Value="@loginUser.Email"
                          Placeholder="Correo"
                          Variant="Variant.Outlined"
                          Class="my-6"
                          For="@(() => loginUser.Email)"
                          Margin="Margin.Dense"
                          Style="">
            </MudTextField>

            <MudTextField @bind-Value="@loginUser.Password"
                          Variant="Variant.Outlined"
                          InputType="@PasswordInput"
                          Adornment="Adornment.End"
                          AdornmentIcon="@PasswordInputIcon"
                          OnAdornmentClick="TogglePasswordVisibility"
                          For="@(() => loginUser.Password)"
                          Margin="Margin.Dense"
                          FullWidth="false" Placeholder="Contraseña"
                          Style="">
            </MudTextField>

            <div style="display: flex; justify-content: flex-end; margin-top: 10px;">
                <MudCheckBox @bind-Checked="@checkvalue" Color="@Color.Primary" Label="Mantener Sesión" LabelPosition="LabelPosition.Start" />
            </div>
        </div>
 
        

        <center>
            <MudButton Class="mt-5 btn rounded-pill" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
                    Disabled="@disableButton" Color="Color.Primary">
                Iniciar Sesión
            </MudButton>
        </center>

        <center>
            <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mt-5">
                ¿Tienes problemas?
            </MudButton>
        </center>
        
    </EditForm>
</MudPaper>

<MudAlert Severity="Severity.Error" Class="@(myAlert + " mt-8 mud-width-full")" Style="max-width:500px;" Elevation="25">No se encontraron coincidencias</MudAlert>

@code {
    LoginUser loginUser = new LoginUser();
    string myImageClass { get; set; } = "d-none";
    string myAlert { get; set; } = "d-none";
    bool disableButton { get; set; } = false;
    public bool? checkvalue { get; set; } = false;


    bool loading = false;

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task OnValidSubmit()
    {
        myImageClass = "d-block";
        disableButton = true;
        var result = true;

        if (result)
        {
            loading = true;
            await Task.Delay(2000);
            _navigationManager.NavigateTo("/dashboard");
        }   
        else
        {
            myImageClass = "d-none";
            disableButton = false;
            myAlert = "d-block";
        }
    }
}
