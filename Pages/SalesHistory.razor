@page "/ventas/historial"
@attribute [Authorize(Policy = "SalesRead")]
@using Pharmatic.DTOs;
@using Pharmatic.Services;
@layout MainLayout
@inject NavigationManager _navigationManager
@inject SharedData _data
@inject SalesService _salesService
@inject LotService _lotService
@inject ProductService _productService
@inject CustomerService _customerService

<MudPaper Class="mx-2" Style="height:100%; overflow-y:auto; overflow-x: hidden; background-color:white;">
    <MudAppBar Elevation="0" Fixed="false" Style="border-radius: 15px; position: sticky; top: 0;">
        <MudTextField @bind-Value="@search_text" Placeholder="Buscar" Variant="Variant.Outlined" Adornment="Adornment.Start"
                      AdornmentIcon="@CustomIcons.Search" Margin="Margin.Dense" />

        <MudSpacer />
    </MudAppBar>

    @if (loading)
    {
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7 px-7" Size="Size.Large" Rounded="true"/>
    }
    
    <MudGrid Class="pa-3">
        @foreach (var sale in sales_list)
        {
            <MudItem xs="4">

                <MudCard Style="background-color: #F5F5F5;" Class="hover-card" Outlined="true">

                        <MudCardContent>

                            <MudText Typo="Typo.body1" Align="Align.End"><b>Número de productos: @sale.TotalProducts</b></MudText>
                            <MudText Typo="Typo.h6" Inline="true">Total venta: </MudText>
                            <MudText Typo="Typo.h6" Color="Color.Success" Inline="true"> C$ @sale.SalesAmount</MudText>
                            <MudText Typo="Typo.body1">
                                Venta realizada el <b>@sale.SalesDate.ToString("dd/MM/yyyy")</b> a las <b>@sale.SalesDate.ToString("hh:mm tt")</b>
                            </MudText>

                        <MudContainer Class="my-2 rounded py-2" Style="height: 100px; overflow: auto; background-color: white;">
                            @foreach (var product_details in sale.Products)
                            {
                                <MudText Typo="Typo.body2">@product_details</MudText>
                            }
                        </MudContainer>

                            <MudText Typo="Typo.body1" Align="Align.End"><b>Cliente: @sale.CustomerName</b></MudText>
                            
                        </MudCardContent>

                </MudCard>

            </MudItem>
        }
    </MudGrid>

</MudPaper>

@code {
    private List<SalesHistoryDto> sales_list = new();
    private string search_text = string.Empty;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        _data.Items = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/dashboard", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Historial de ventas", href: null, disabled: true)
        };

        await GetSales();

        loading = false;
    }

    private async Task GetSales()
    {
        var result = await _salesService.SalesHistory();
        sales_list = result!;
    }
}
