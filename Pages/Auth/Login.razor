@page "/"
@inject NavigationManager _navigationManager
<link rel="stylesheet" href="/css/style.css" />
@layout LoginLayout

<EditForm Model="@loginUser" OnValidSubmit="OnValidSubmit">
    

    <DataAnnotationsValidator></DataAnnotationsValidator>

    <MudText Typo="Typo.h4" GutterBottom="true" Align="Align.Left" >Login</MudText>

    <MudTextField T="string"
    @bind-Value="@loginUser.Email"
                  Label="Correo"
                  Variant="Variant.Outlined"
                  Class="my-6 txtbox"
                  For="@(() => loginUser.Email)">
        </MudTextField>

    <MudTextField @bind-Value="@loginUser.Password"
                  Class="txtbox"    
                  Label="Contraseña"
                  Variant="Variant.Outlined"
                  InputType="@PasswordInput"
                  Adornment="Adornment.End"
                  AdornmentIcon="@PasswordInputIcon"
                  OnAdornmentClick="TogglePasswordVisibility"
                      For="@(() => loginUser.Password)" />

    <MudButton Class="mt-5 btn" Variant="Variant.Filled" ButtonType="ButtonType.Submit" Size="Size.Large"
               FullWidth="true"
               Disabled="@disableButton">Iniciar Sesión
           </MudButton>

    <center>
        <MudLink Href="#" Class="pa-4">¿Tienes problemas?</MudLink>
    </center>

    <MudProgressLinear Color="Color.Primary" Indeterminate="loading" Class="my-7" />
</EditForm>

<MudAlert Severity="Severity.Error" Class="@(myAlert + " mt-8 mud-width-full")" Style="max-width:500px;" Elevation="25">No se encontraron coincidencias</MudAlert>


@code {
    LoginUser loginUser = new LoginUser();
    string myImageClass { get; set; } = "d-none";
    string myAlert { get; set; } = "d-none";
    bool disableButton { get; set; } = false;

    bool loading = false;

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task OnValidSubmit()
    {
        myImageClass = "d-block";
        disableButton = true;
        var result = true;

        if (result)
        {
            loading = true;
            await Task.Delay(2000);
            _navigationManager.NavigateTo("/page/dashboard");
        }   
        else
        {
            myImageClass = "d-none";
            disableButton = false;
            myAlert = "d-block";
        }
    }
}
